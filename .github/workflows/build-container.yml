name: Build KoLmafia Container

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Allow manual triggering
  push:
    # Trigger on pushes to main branch
    branches: [ main ]

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      if: steps.get-release.outputs.skip != 'true'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Get latest KoLmafia release
      id: get-release
      run: |
        # Get the latest release info from KoLmafia GitHub API
        RELEASE_INFO=$(curl -s https://api.github.com/repos/kolmafia/kolmafia/releases/latest)
        LATEST_VERSION=$(echo "$RELEASE_INFO" | jq -r '.name')
        LATEST_JAR_URL=$(echo "$RELEASE_INFO" | jq -r '.assets[] | select(.name | endswith(".jar")) | .browser_download_url' | head -1)

        echo "Latest version: $LATEST_VERSION"
        echo "JAR URL: $LATEST_JAR_URL"

        # Check if we already have this version
        if docker images | grep -q "kolmafia:v$LATEST_VERSION"; then
          echo "Version v$LATEST_VERSION already exists, skipping build"
          echo "skip=true" >> $GITHUB_OUTPUT
        else
          echo "New version v$LATEST_VERSION found, will build"
          echo "skip=false" >> $GITHUB_OUTPUT
          echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT
          echo "jar_url=$LATEST_JAR_URL" >> $GITHUB_OUTPUT
        fi

    - name: Build and push Docker image
      if: steps.get-release.outputs.skip != 'true'
      run: |
        # Update the Dockerfile with the new version
        sed -i "s|r28569|r${{ steps.get-release.outputs.version }}|g" Dockerfile
        sed -i "s|KoLmafia-28569.jar|KoLmafia-${{ steps.get-release.outputs.version }}.jar|g" Dockerfile

        # Build and push to GHCR
        docker build -t ghcr.io/${{ github.repository }}/kolmafia:v${{ steps.get-release.outputs.version }} .
        docker tag ghcr.io/${{ github.repository }}/kolmafia:v${{ steps.get-release.outputs.version }} ghcr.io/${{ github.repository }}/kolmafia:latest

        # Push both tagged and latest versions
        docker push ghcr.io/${{ github.repository }}/kolmafia:v${{ steps.get-release.outputs.version }}
        docker push ghcr.io/${{ github.repository }}/kolmafia:latest

    - name: Create release notes
      if: steps.get-release.outputs.skip != 'true'
      run: |
        echo "## KoLmafia Container v${{ steps.get-release.outputs.version }}" >> release-notes.md
        echo "" >> release-notes.md
        echo "### Changes:" >> release-notes.md
        echo "- Updated KoLmafia to version ${{ steps.get-release.outputs.version }}" >> release-notes.md
        echo "- Container image: \`ghcr.io/${{ github.repository }}/kolmafia:v${{ steps.get-release.outputs.version }}\`" >> release-notes.md
        echo "" >> release-notes.md
        echo "### Usage:" >> release-notes.md
        echo '```bash' >> release-notes.md
        echo 'docker run -d -p 6901:6901 -p 5901:5901 \' >> release-notes.md
        echo '  -v kolmafia-data:/home/docker/.kolmafia \' >> release-notes.md
        echo '  --name kolmafia ghcr.io/${{ github.repository }}/kolmafia:v${{ steps.get-release.outputs.version }}' >> release-notes.md
        echo '```' >> release-notes.md

    - name: Comment on PR (if triggered by PR)
      if: github.event_name == 'pull_request' && steps.get-release.outputs.skip != 'true'
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            body: `ðŸŽ‰ New KoLmafia container built for version v${{ steps.get-release.outputs.version }}!\n\nContainer image: \`ghcr.io/${{ github.repository }}/kolmafia:v${{ steps.get-release.outputs.version }}\``
          })
