name: Build and Push KoLmafia Container

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Allow manual triggering
  push:
    # Trigger on pushes to main branch
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/kolmafia

jobs:
  check-and-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Get latest KoLmafia release
      id: get-release
      run: |
        # Get the latest release info from KoLmafia GitHub API
        RELEASE_INFO=$(curl -s https://api.github.com/repos/kolmafia/kolmafia/releases/latest)
        LATEST_VERSION=$(echo "$RELEASE_INFO" | jq -r '.name')
        LATEST_JAR_URL=$(echo "$RELEASE_INFO" | jq -r '.assets[] | select(.name | endswith(".jar")) | .browser_download_url' | head -1)

        echo "Latest version: $LATEST_VERSION"
        echo "JAR URL: $LATEST_JAR_URL"

        # Check if this version already exists in registry (optional)
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          # You can add registry checking logic here
          echo "Checking registry for existing version..."
        fi

        echo "version=$LATEST_VERSION" >> $GITHUB_OUTPUT
        echo "jar_url=$LATEST_JAR_URL" >> $GITHUB_OUTPUT

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=v${{ steps.get-release.outputs.version }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          VERSION=${{ steps.get-release.outputs.version }}
          JAR_URL=${{ steps.get-release.outputs.jar_url }}

    - name: Create GitHub release
      if: github.event_name == 'workflow_dispatch'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.get-release.outputs.version }}
        release_name: KoLmafia Container v${{ steps.get-release.outputs.version }}
        body: |
          ## KoLmafia Container v${{ steps.get-release.outputs.version }}

          ### Changes:
          - Updated KoLmafia to version ${{ steps.get-release.outputs.version }}
          - Container image: `${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ steps.get-release.outputs.version }}`

          ### Usage:
          ```bash
          docker run -d -p 6901:6901 -p 5901:5901 \
            -v kolmafia-data:/home/docker/.kolmafia \
            --name kolmafia ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ steps.get-release.outputs.version }}
          ```

          ### Web Access:
          - VNC Web Interface: http://localhost:6901
          - Direct VNC: localhost:5901 (password: vncpassword)
        draft: false
        prerelease: false
